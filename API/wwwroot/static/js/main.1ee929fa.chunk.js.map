{"version":3,"sources":["app/models/pagination.ts","app/models/profile.ts","app/models/activity.ts","app/api/agent.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErros.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUploader/PhotoWidgetCropper.tsx","app/common/imageUploader/PhotoWidgetDropzone.tsx","app/common/imageUploader/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","Profile","user","username","displayName","image","Activity","init","Object","assign","ActivityFormValues","activity","id","undefined","title","category","description","date","city","venue","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","url","get","then","body","post","put","delete","agent","Activities","list","params","details","create","update","attend","Account","current","login","register","fbLogin","accessToken","Profiles","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","updateFollwoing","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activiyId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","activityId","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","event","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selecte","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChang","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.1ee929fa.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor (user: User) {\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    };\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n}","import { Profile } from './profile';\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date | null;\r\n    description: string;\r\n    category: string;\r\n    city: string;\r\n    venue: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues) {\r\n        if (activity) {\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n            this.city = activity.city;\r\n            this.venue = activity.venue;\r\n        }\r\n    }\r\n}","import { PaginatedResult } from './../models/pagination';\r\nimport { Photo, UserActivity } from './../models/profile';\r\nimport { store } from './../stores/store';\r\nimport { Activity, ActivityFormValues } from './../models/activity';\r\nimport axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { Profile } from '../models/profile';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n    }\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development')\r\n        await sleep(1000);\r\n\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const {data, status, config} = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (typeof data === 'string') {\r\n                toast.error(data);\r\n            }\r\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                history.push('/not-found');\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key]);\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            } else {\r\n                toast.error(data);\r\n            }\r\n            break;\r\n        case 401:\r\n            toast.error('unauthorised');\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst request = {\r\n    get: <T> (url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T> (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T> (url: string) => axios.delete<T>(url).then(responseBody)\r\n}\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', { params })\r\n        .then(responseBody),\r\n    details: (id: string) => request.get<Activity>(`activities/${id}`),\r\n    create: (activity: ActivityFormValues) => request.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues) => request.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => request.del<void>(`/activities/${id}`),\r\n    attend: (id: string) => request.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n    current: () => request.get<User>('/account'),\r\n    login: (user: UserFormValues) => request.post<User>('/account/login', user),\r\n    register: (user: UserFormValues) => request.post<User>('/account/register', user),\r\n    fbLogin: (accessToken: string) => request.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {})\r\n};\r\n\r\nconst Profiles = {\r\n    get: (username: string) => request.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n        return axios.post<Photo>('photos', formData, {\r\n            headers: {'Content-type': 'multipart/form-data'}\r\n        })\r\n    },\r\n    setMainPhoto: (id: string) => request.post(`/photos/${id}/setMain`, {}),\r\n    deletePhoto: (id: string) => request.del(`/photos/${id}`),\r\n    updateProfile: (profile: Partial<Profile>) => request.put('/profiles', profile),\r\n    updateFollowing: (username: string) => request.post(`/follow/${username}`, {}),\r\n    listFollowings: (username: string, predicate: string) =>\r\n        request.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listActivities: (username: string, predicate: string) =>\r\n        request.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n};\r\n\r\nexport default agent;","import { Pagination, PagingParams } from './../models/pagination';\r\nimport { Profile } from './../models/profile';\r\nimport { store } from './store';\r\nimport { Activity, ActivityFormValues } from './../models/activity';\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from '../api/agent';\r\nimport { format } from 'date-fns';\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set('all', true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    )\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  }\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== 'startDate')\r\n          this.predicate.delete(key);\r\n      });\r\n    }\r\n    switch(predicate) {\r\n      case 'all':\r\n        resetPredicate();\r\n        this.predicate.set('all', true);\r\n        break;\r\n      case 'isGoing':\r\n        resetPredicate();\r\n        this.predicate.set('isGoing', true);\r\n        break;\r\n      case 'isHost':\r\n        resetPredicate();\r\n        this.predicate.set('isHost', true);\r\n        break;\r\n      case 'startDate':\r\n        this.predicate.delete('startDate');\r\n        this.predicate.set('startDate', value);\r\n    }\r\n  }\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n    params.append('pageSize', this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === 'startDate') {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    })\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort((a, b) =>\r\n      a.date!.getTime() - b.date!.getTime());\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, 'dd MMM yyyy');\r\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n        return activities;\r\n      }, {} as {[key: string]: Activity[]})\r\n    )\r\n  }\r\n\r\n\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n      result.data.forEach(activity => {\r\n          this.setActivity(activity);\r\n      })\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n}\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  }\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        });\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        a => a.username === user.username\r\n      )\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\r\n    }\r\n\r\n    // activity.date = new Date(activity.date!);\r\n    activity.date =  new Date();\r\n    this.activityRegistry.set(activity.id, activity);\r\n  }\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  }\r\n\r\n  setLoadingInitial = (state: boolean)  => {\r\n    this.loadingInitial = state;\r\n  }\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      await (await agent.Activities.create(activity));\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updatedActivity = {...this.getActivity(activity.id), ...activity}\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.loading = false;\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      })\r\n    }\r\n  }\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => this.loading = false);\r\n    }\r\n  }\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => this.loading = false);\r\n    }\r\n  }\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  }\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach(activity => {\r\n      activity.attendees.forEach(attendee => {\r\n        if (attendee.username === username) {\r\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      })\r\n    })\r\n  }\r\n}","import { store } from './store';\r\nimport { makeAutoObservable, runInAction, reaction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { Photo, Profile, UserActivity } from './../models/profile';\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploading = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings = false;\r\n    activeTab = 0;\r\n    userActivities: UserActivity[] = [];\r\n    loadingActivities = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.activeTab, activeTab => {\r\n                if (activeTab === 3 || activeTab === 4) {\r\n                    const predicate = activeTab === 3 ? 'followers' : 'following';\r\n                    this.loadFollowings(predicate);\r\n                } else {\r\n                    this.followings = [];\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) => {\r\n        this.activeTab = activeTab;\r\n    }\r\n\r\n    get isCurrentUser() {\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                console.log(profile);\r\n                this.profile = profile;\r\n                this.loadingProfile = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploading = true;\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo);\r\n                    if (photo.isMain && store.userStore.user) {\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n                this.uploading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            runInAction(() => this.uploading = false);\r\n        }\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.photos) {\r\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n                    this.profile.image = photo.url;\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    updateProfile = async (profile: Partial<Profile>) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateProfile(profile);\r\n            runInAction(() => {\r\n                if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n                    store.userStore.setDisplayName(profile.displayName);\r\n                }\r\n                this.profile = {...this.profile, ...profile as Profile};\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateFollwoing = async (username: string, following: boolean) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.activityStore.updateAttendeeFollowing(username);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\r\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n                    this.profile.following = !this.profile.following;\r\n                }\r\n                if (this.profile && this.profile.username === store.userStore.user?.username) {\r\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n                }\r\n                this.followings.forEach(profile => {\r\n                    if (profile.username === username) {\r\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\r\n                        profile.following = !profile.following;\r\n                    }\r\n                })\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.loadingFollowings = true;\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            runInAction(() => {\r\n                this.followings = followings;\r\n                this.loadingFollowings = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingFollowings = false);\r\n        }\r\n    }\r\n\r\n    loadUserActivities =async (username: string, predicate?: string) => {\r\n        this.loadingActivities = true;\r\n        try {\r\n            const activities = await agent.Profiles.listActivities(username, predicate!);\r\n            runInAction(() => {\r\n                this.userActivities = activities;\r\n                this.loadingActivities = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loadingActivities = false;\r\n            })\r\n        }\r\n    }\r\n}","import { history } from './../../index';\r\nimport { runInAction } from 'mobx';\r\nimport { store } from './store';\r\nimport { makeAutoObservable } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { User, UserFormValues } from './../models/user';\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n    fbAccessToken: string | null = null;\r\n    fbLoading = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            runInAction(() => this.user = user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setImage = (image: string) => {\r\n        if (this.user) {\r\n            this.user.image = image;\r\n        }\r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) {\r\n            this.user.displayName = name;\r\n        }\r\n    }\r\n\r\n    getFacebookLoginStatus = async () => {\r\n        window.FB.getLoginStatus(response => {\r\n            if (response.status === 'connected') {\r\n                this.fbAccessToken = response.authResponse.accessToken;\r\n            }\r\n        })\r\n    }\r\n\r\n    facebookLogin = () => {\r\n        this.fbLoading = true;\r\n        const apiLogin = (accessToken: string) => {\r\n            agent.Account.fbLogin(accessToken).then(user => {\r\n                store.commonStore.setToken(user.token);\r\n                runInAction(() => {\r\n                    this.user = user;\r\n                    this.fbLoading = false;\r\n                })\r\n                history.push('/activities');\r\n            }).catch(error => {\r\n                console.log(error);\r\n                this.fbLoading = false;\r\n            })\r\n        }\r\n\r\n        if (this.fbAccessToken) {\r\n            apiLogin(this.fbAccessToken);\r\n        } else {\r\n            window.FB.login(response => {\r\n                apiLogin(response.authResponse.accessToken);\r\n            }, {scope: 'public_profile,email'});\r\n        }\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore()\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from 'mobx';\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt', token)\r\n                } else {\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from 'mobx';\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal  = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { store } from './store';\r\nimport { makeAutoObservable, runInAction } from 'mobx';\r\nimport { HubConnection, HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\nimport { ChatComment } from './../models/comment';\r\n\r\nexport default class CommentStore {\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (activiyId: string) => {\r\n        if (store.activityStore.selectedActivity) {\r\n            this.hubConnection = new HubConnectionBuilder()\r\n            .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activiyId, {\r\n                accessTokenFactory: () => store.userStore.user?.token!\r\n            })\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log('Error establishing connection'));\r\n\r\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n                runInAction(() => {\r\n                    comments.forEach(comment => {\r\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    })\r\n                    this.comments = comments\r\n                });\r\n            })\r\n\r\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment)\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\r\n    }\r\n\r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {userStore: {user, logout}} = useStore()\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: \"10px\" }} />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Erros\" />\r\n        <Menu.Item>\r\n          <Button as={NavLink} to=\"/createActivity\" positive content=\"Create Activity\" />\r\n        </Menu.Item>\r\n        <Menu.Item position='right'>\r\n          <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\r\n          <Dropdown pointing='top left' text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text='My Profile' icon='user' />\r\n              <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {activityStore: {predicate, setPredicate}} = useStore();\r\n  return (\r\n    <>\r\n        <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 28 }}>\r\n            <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n            <Menu.Item\r\n              content='All Activities'\r\n              active={predicate.has('all')}\r\n              onClick={() => setPredicate('all', 'true')}\r\n            />\r\n            <Menu.Item\r\n              content=\"I'm going\"\r\n              active={predicate.has('isGoing')}\r\n              onClick={() => setPredicate('isGoing', 'true')}\r\n            />\r\n            <Menu.Item\r\n              content=\"I'm hosting\"\r\n              active={predicate.has('isHost')}\r\n              onClick={() => setPredicate('isHost', 'true')}\r\n            />\r\n        </Menu>\r\n        <Header />\r\n        <Calendar\r\n          onChange={(date: Date) => setPredicate('startDate', date)}\r\n          value={predicate.get('startDate') || new Date()}\r\n        />\r\n    </>\r\n  );\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent } from 'react';\r\nimport { Reveal, Button } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({profile}: Props) {\r\n    const {profileStore, userStore} = useStore();\r\n    const {updateFollwoing, loading} = profileStore;\r\n\r\n    if (userStore.user?.username === profile.username)\r\n        return null;\r\n\r\n    function handleFollow(e: SyntheticEvent, username: string) {\r\n        e.preventDefault();\r\n        profile.following ? updateFollwoing(username, false) : updateFollwoing(username, true);\r\n        // updateFollwoing(username, !profile.following)\r\n    }\r\n\r\n    return (\r\n        <Reveal animated=\"move\">\r\n            <Reveal.Content visible style={{width: '100%'}}>\r\n                <Button\r\n                    fluid\r\n                    color=\"teal\"\r\n                    content={profile.following ? 'Following' : 'Not following'}\r\n                />\r\n            </Reveal.Content>\r\n            <Reveal.Content hidden style={{width: '100%'}}>\r\n                <Button\r\n                    fluid\r\n                    basic\r\n                    color={profile.following ? 'red' : 'green'}\r\n                    content={profile.following  ? 'Unfollow' : 'Follow'}\r\n                    loading={loading}\r\n                    onClick={(e) => handleFollow(e, profile.username)}\r\n                />\r\n            </Reveal.Content>\r\n        </Reveal>\r\n    )\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({profile}: Props) {\r\n    function truncate(str: string  | undefined) {\r\n        if (str) {\r\n            return str.length > 40 ? str.substring(0, 37) + '...' : str;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card  as={Link} to={`/profiles/${profile.username}`}>\r\n            <Image src={profile.image || '/assets/user.png'} />\r\n            <Card.Content>\r\n                <Card.Header>{profile.displayName}</Card.Header>\r\n                <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Icon name=\"user\" />\r\n                {profile.followersCount} followers\r\n            </Card.Content>\r\n            <FollowButton profile={profile}/>\r\n        </Card>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image, List, Popup } from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props {\r\n    attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({attendees}: Props) {\r\n    const styles = {\r\n        borderColor: 'orange',\r\n        borderWidth: 3\r\n    }\r\n    return (\r\n        <List horizontal>\r\n            {attendees.map(attendee => (\r\n                <Popup\r\n                    hoverable\r\n                    key={attendee.username}\r\n                    trigger={\r\n                        <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n                            <Image\r\n                                size='mini'\r\n                                circular\r\n                                src={attendee.image || '/assets/user.png'}\r\n                                bordered\r\n                                style={attendee.following ? styles : null}\r\n                            />\r\n                        </List.Item>\r\n                    }\r\n                >\r\n                    <Popup.Content>\r\n                        <ProfileCard profile={attendee} />\r\n                    </Popup.Content>\r\n                </Popup>\r\n            ))}\r\n        </List>\r\n    )\r\n})","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default function ActivityListItem({activity}: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled &&\r\n          <Label attached=\"top\" color=\"red\" content=\"Cancelled\" style={{textAlign: 'center'}} />\r\n        }\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image style={{marginBottom: 3}} size='tiny' circular src={activity.host?.image || '/assets/user.png'}/>\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link></Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name='clock'/> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n          <Icon name='marker'/> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color='teal'\r\n          floated='right'\r\n          content='View'\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const {activityStore} = useStore();\r\n  const {groupedActivities} = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color='teal'>\r\n            {group}\r\n          </Header>\r\n          {activities.map(activity => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const {activityStore} = useStore();\r\n\r\n  const { loadActivities, activityRegistry, setPagingParams, pagination } = activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1))\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1)\r\n      loadActivities();\r\n  }, [activityRegistry.size, loadActivities])\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default  observer(function LoginForm() {\r\n    const {userStore} = useStore()\r\n    return (\r\n        <Formik\r\n            initialValues={{email: '', password: '', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.login(values).catch(error =>\r\n                setErrors({error: 'Invalid email or password'}))}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors}) => (\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Login to Reactivites' color='teal' textAlign='center' />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type='password' />\r\n                    <ErrorMessage name='error' render={() =>\r\n                        <Label style={{marginBottom: 10}} basic color='red' content={errors.error} />}\r\n                    />\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n});","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErros';\r\n\r\nexport default  observer(function RegisterForm() {\r\n    const {userStore} = useStore()\r\n    return (\r\n        <Formik\r\n            initialValues={{displayName: '', username: '', email: '', password: '', error: null}}\r\n            onSubmit={(values, {setErrors}) => userStore.register(values).catch(error =>\r\n                setErrors({error}))}\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required(),\r\n                username: Yup.string().required(),\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required(),\r\n            })}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Sign up to Reactivites' color='teal' textAlign='center' />\r\n                    <MyTextInput name='displayName' placeholder='Display Name' />\r\n                    <MyTextInput name='username' placeholder='Username' />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type='password' />\r\n                    <ErrorMessage name='error' render={() =>\r\n                        <ValidationErrors errors={errors.error}/>}\r\n                    />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting}\r\n                        loading={isSubmitting} positive content='Register' type='submit' fluid />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n});","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container, Divider, Header, Image, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const {userStore, modalStore} = useStore();\r\n  return (\r\n    <Segment inverted textAlign='center' vertical className='masthead'>\r\n      <Container text>\r\n        <Header as='h1' inverted>\r\n          <Image size='massive' src='/assets/logo.png' alt='logo' style={{marginBottom: 12}}/>\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as='h2' inverted content='Welcome to Reactivities' />\r\n            <Button as={Link} to='/activities' size='huge' inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\r\n              Login!\r\n            </Button>\r\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>\r\n              Register!\r\n            </Button>\r\n            <Divider horizontal inverted>Or</Divider>\r\n            <Button\r\n              loading={userStore.fbLoading}\r\n              size=\"huge\"\r\n              inverted\r\n              color=\"facebook\"\r\n              content=\"Login with Facebook\"\r\n              onClick={userStore.facebookLogin}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({inverted = true, content = \"Loading...\"}: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted} >\r\n            <Loader content={content} />\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(event, data) => helpers.setValue(data.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n    {text: 'Drinks', value: 'drinks'},\r\n    {text: 'Culture', value: 'culture'},\r\n    {text: 'Film', value: 'fild'},\r\n    {text: 'Food', value: 'food'},\r\n    {text: 'Music', value: 'music'},\r\n    {text: 'Travel', value: 'travel'},\r\n]","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n// import DatePicker, {ReactDatePickerProps} from 'react-datepicker';\r\nimport DatePicker from 'react-datepicker';\r\n\r\n// export default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\nexport default function MyDateInput(props: any) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n        <DatePicker\r\n          {...field}\r\n          {...props}\r\n          selecte={(field.value && new Date(field.value)) || null}\r\n          onChange={value => helpers.setValue(value)}\r\n        />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">{meta.error}</Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  )\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport {v4 as uuid} from 'uuid';\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const {activityStore} = useStore();\r\n  const {createActivity, updateActivity, loadActivity, loadingInitial} = activityStore;\r\n  const {id} = useParams<{id: string}>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required('The activity title is riquered'),\r\n    description: Yup.string().required('The activity description is riquered'),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required('Date is required').nullable(),\r\n    venue: Yup.string().required(),\r\n    city: Yup.string().required(),\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)));\r\n    }\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity =  {\r\n        ...activity,\r\n        id: uuid()\r\n      };\r\n      createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\r\n    } else {\r\n      updateActivity(activity).then(() => history.push(`/activities/${activity.id}`));\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) {\r\n    return <LoadingComponent content='Loading activity...' />\r\n  }\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content='Activity Details' sub color='teal' />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize initialValues={activity}\r\n        onSubmit={values => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className='ui form' onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name='title' placeholder='Title' />\r\n            <MyTextArea rows={3} placeholder=\"Description\" name='description' />\r\n            <MySelectInput options={categoryOptions} placeholder=\"Category\" name='category' />\r\n            <MyDateInput placeholderText=\"Date\" name='date' showTimeSelect timeCaption='time' dateFormat='MMMM d, yyyy h:mm aa' />\r\n            <Header content='Location Details' sub color='teal' />\r\n            <MyTextInput placeholder=\"City\" name='city' />\r\n            <MyTextInput placeholder=\"Venue\"  name='venue' />\r\n            <Button\r\n              disabled={isSubmitting || !isValid || !dirty}\r\n              loading={isSubmitting}\r\n              floated=\"right\" positive type=\"submit\" content=\"Submit\"\r\n            />\r\n            <Button as={Link} to='/activities' floated=\"right\" type=\"button\" content=\"Cancel\" />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({activityId}: Props) {\r\n  const {commentStore} = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    }\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n          <Formik\r\n            onSubmit={(values, {resetForm}) =>\r\n              commentStore.addComment(values).then(() => resetForm())}\r\n            initialValues={{body: ''}}\r\n            validationSchema={Yup.object({\r\n              body: Yup.string().required()\r\n            })}\r\n          >\r\n            {({isSubmitting, isValid, handleSubmit}) => (\r\n              <Form className=\"ui form\">\r\n                <Field name='body'>\r\n                  {(props: FieldProps) => (\r\n                    <div style={{position: 'relative'}}>\r\n                      <Loader active={isSubmitting} />\r\n                      <textarea\r\n                        placeholder=\"Enter your comment (Enteder to submit, SHIFT + enter for new line)\"\r\n                        rows={2}\r\n                        {...props.field}\r\n                        onKeyPress={e => {\r\n                          if (e.key === 'Enter' && e.shiftKey) {\r\n                            return;\r\n                          }\r\n                          if (e.key === 'Enter' && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            isValid && handleSubmit();;\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Field>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map(comment => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n\r\n\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\r\n    const {activityStore: {updateAttendance, loading, cancelActivityToggle}} = useStore();\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{padding: '0'}}>\r\n                {activity.isCancelled &&\r\n                    <Label style={{position: 'absolute', zIndex: 1000, left: -14, top: 20}} ribbon color='red' content='Cancelled' />\r\n                }\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{color: 'white'}}\r\n                                />\r\n                                <p>{format(activity.date!, 'd MMM yyyy')}</p>\r\n                                <p>\r\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {activity.isHost ? (\r\n                    <>\r\n                        <Button\r\n                            color={activity.isCancelled ? 'green' : 'red'}\r\n                            floated='left'\r\n                            basic\r\n                            content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\r\n                            onClick={cancelActivityToggle}\r\n                            loading={loading}\r\n                        />\r\n                        <Button\r\n                            disabled={activity.isCancelled}\r\n                            as={Link}\r\n                            to={`/manage/${activity.id}`}\r\n                            color='orange'\r\n                            floated='right'>\r\n                            Manage Event\r\n                        </Button>\r\n                    </>\r\n                ) : activity.isGoing ? (\r\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\r\n                ) : (\r\n                    <Button\r\n                        disabled={activity.isCancelled}\r\n                        loading={loading}\r\n                        onClick={updateAttendance}\r\n                        color='teal'>Join Activit\r\n                    </Button>\r\n                )}\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import { format } from 'date-fns/esm';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <span>\r\n                        {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n                        </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\ninterface Props {\r\n    activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar ({activity: {attendees, host}}: Props) {\r\n    if (!attendees)\r\n        return null;\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {attendees.map(attendee => (\r\n                        <Item style={{ position: 'relative' }} key={attendee.username}>\r\n                            {attendee.username === host?.username &&\r\n                                <Label\r\n                                    style={{ position: 'absolute' }}\r\n                                    color='orange'\r\n                                    ribbon='right'\r\n                                >\r\n                                    Host\r\n                                </Label>\r\n                            }\r\n                            <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Item.Header as='h3'>\r\n                                    <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                                </Item.Header>\r\n                                {attendee.following &&\r\n                                <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                            </Item.Content>\r\n                        </Item>\r\n                    ))}\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const {activityStore} = useStore();\r\n  const {selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity} = activityStore;\r\n  const {id} = useParams<{id: string}>();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadActivity(id);\r\n      return () => clearSelectedActivity();\r\n    }\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity}/>\r\n        <ActivityDetailedInfo  activity={activity}/>\r\n        <ActivityDetailedChat  activityId={activity.id}/>\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport ValidationErrors from './ValidationErros';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors &&\r\n                <ValidationErrors errors={errors} />\r\n            }\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked everywhere and could not find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store';\r\n\r\nexport default observer(function ModalContainer() {\r\n    const {modalStore} = useStore();\r\n\r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n});","import React from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n    setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({setEditMode}: Props) {\r\n    const {profileStore: {profile, updateProfile}} = useStore();\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{displayName: profile?.displayName, bio: profile?.bio}}\r\n            onSubmit={values => {\r\n                updateProfile(values).then(() => {\r\n                    setEditMode(false);\r\n                })\r\n            }}\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required()\r\n            })}\r\n        >\r\n            {({isSubmitting, isValid, dirty}) => (\r\n                <Form className=\"ui form\">\r\n                    <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n                    <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n                    <Button\r\n                        positive\r\n                        type='submit'\r\n                        loading={isSubmitting}\r\n                        content='Update profile'\r\n                        floated=\"right\"\r\n                        disabled={!isValid || !dirty}\r\n                    />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n});","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\n\r\nexport default observer(function ProfileAbout() {\r\n    const {profileStore} = useStore();\r\n    const {isCurrentUser, profile} = profileStore;\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated=\"left\" icon='user' content={`About ${profile?.displayName}`} />\r\n                    {isCurrentUser && (\r\n                        <Button\r\n                            floated=\"right\"\r\n                            basic\r\n                            content={editMode ? 'Cancel' : 'Edit Profile'}\r\n                            onClick={() => setEditMode(!editMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                        {editMode ?\r\n                            <ProfileEditForm setEditMode={setEditMode} /> :\r\n                            <span style={{whiteSpace: 'pre-wrap'}}>{profile?.bio}</span>\r\n                        }\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n});","import React, { SyntheticEvent, useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserActivity } from '../../app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n    {menuItem: 'Future Events', pane: {key: 'future'}},\r\n    {menuItem: 'Past Events', pane: {key: 'past'}},\r\n    {menuItem: 'Hosting', pane: {key: 'hosting'}},\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n    const {profileStore} = useStore();\r\n    const {loadUserActivities, profile, loadingActivities, userActivities} = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadUserActivities(profile!.username);\r\n    }, [loadUserActivities, profile]);\r\n\r\n    const handleTabChang = (e: SyntheticEvent, data: TabProps) => {\r\n        loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key);\r\n    };\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingActivities}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='calendar' content={'Activities'} />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Tab\r\n                        panes={panes}\r\n                        menu={{secondary: true, pointing: true}}\r\n                        onTabChange={(e, data) => handleTabChang(e, data)}\r\n                    />\r\n                    <br />\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {userActivities.map((activity: UserActivity) => (\r\n                            <Card\r\n                                as={Link}\r\n                                to={`/activities/${activity.id}`}\r\n                                key={activity.id}\r\n                            >\r\n                                <Image\r\n                                    src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                                    style={{minHeight: 100, objectFit: 'cover'}}\r\n                                />\r\n                                <Card.Content>\r\n                                    <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                                    <Card.Meta textAlign='center'>\r\n                                        <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                                        <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                                    </Card.Meta>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    );\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowings() {\r\n    const {profileStore} = useStore();\r\n    const {profile, followings, loadingFollowings, activeTab} = profileStore;\r\n\r\n    return(\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header\r\n                        floated='left'\r\n                        icon='user'\r\n                        content={activeTab === 3 ? `People following ${profile?.displayName}` : `People ${profile?.displayName} is following`}\r\n                    />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile => (\r\n                            <ProfileCard key={profile.username} profile={profile} />\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\n// npm install react-cropper\r\n\r\ninterface Props {\r\n    imagePreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\r\n    return (\r\n        <Cropper\r\n            src={imagePreview}\r\n            style={{height: 200, width: '100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n    )\r\n}","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\n// npm install --save react-dropzone\r\n\r\ninterface Props {\r\n    setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\r\n    const dzStyles = {\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        textAlign: 'center' as 'center',\r\n        height: 200\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: 'green',\r\n    }\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\r\n        preview: URL.createObjectURL(file)\r\n    })))\r\n  }, [setFiles])\r\n\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n      <input {...getInputProps()} />\r\n        <Icon name='upload' size='huge' />\r\n        <Header content='Drop image here' />\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n    function onCrop() {\r\n        if (cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((files: any) => URL.revokeObjectURL(files.preview));\r\n        }\r\n    }, [files]);\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n                <PhotoWidgetDropzone setFiles={setFiles} />\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header sub color=\"teal\" content=\"Step 2 - Resize Photo\" />\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header sub color=\"teal\" content=\"Step 1 - Preview & Upload\" />\r\n                {files && files.length > 0 &&\r\n                    <>\r\n                    <div className=\"img-preview\" style={{minHeight: 200, overflow: 'hidden'}} />\r\n                    <Button.Group widths={2}>\r\n                        <Button loading={loading} onClick={onCrop} positive icon='check' />\r\n                        <Button disabled={loading} onClick={() => setFiles([])} icon='close' />\r\n                    </Button.Group>\r\n                    </>\r\n                }\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUploader/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({profile}: Props) {\r\n    const {profileStore: {isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto}} = useStore();\r\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n    const [target, setTarget] = useState('');\r\n\r\n    function handlePhotoUpload(file: Blob) {\r\n        uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n    }\r\n\r\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n        setTarget(e.currentTarget.name);\r\n        setMainPhoto(photo);\r\n    }\r\n\r\n    function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n        setTarget(e.currentTarget.name);\r\n        deletePhoto(photo)\r\n    }\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n                    {isCurrentUser && (\r\n                        <Button floated=\"right\" basic\r\n                            content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n                            onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {addPhotoMode ? (\r\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\r\n                    ) : (\r\n                        <Card.Group itemsPerRow={5}>\r\n                            {profile.photos?.map(photo => (\r\n                                <Card key={photo.id}>\r\n                                    <Image src={photo.url} />\r\n                                    {isCurrentUser && (\r\n                                        <Button.Group>\r\n                                            <Button\r\n                                                basic\r\n                                                color=\"green\"\r\n                                                content=\"Main\"\r\n                                                name={'main' + photo.id}\r\n                                                disabled={photo.isMain}\r\n                                                loading={target === 'main' + photo.id && loading}\r\n                                                onClick={e => handleSetMainPhoto(photo, e)}\r\n                                            />\r\n                                            <Button\r\n                                                basic\r\n                                                color=\"red\"\r\n                                                icon=\"trash\"\r\n                                                name={photo.id}\r\n                                                loading={target === photo.id && loading}\r\n                                                onClick={e => handleDeletePhoto(photo, e)}\r\n                                                disabled={photo.isMain}\r\n                                            />\r\n                                        </Button.Group>\r\n                                    )}\r\n                                </Card>\r\n                            ))}\r\n                        </Card.Group>\r\n                    )}\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n});","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({profile}: Props) {\r\n    const {profileStore} = useStore();\r\n\r\n    const panes = [\r\n        {menuItem: 'About', render: () => <ProfileAbout />},\r\n        {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} />},\r\n        {menuItem: 'Events', render: () => <ProfileActivities />},\r\n        {menuItem: 'Followers', render: () => <ProfileFollowings />},\r\n        {menuItem: 'Following', render: () => <ProfileFollowings />}\r\n    ];\r\n\r\n    return (\r\n        <Tab\r\n            menu={{fluid: true, vertical: true}}\r\n            menuPosition=\"right\"\r\n            panes={panes}\r\n            onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n        />\r\n    )\r\n});","import React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({profile}: Props) {\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size=\"small\" src={profile.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign=\"middle\">\r\n                                <Header as=\"h1\" content={profile.displayName} />\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label=\"Followers\" value={profile.followersCount} />\r\n                        <Statistic label=\"Following\" value={profile.followingCount} />\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                    <FollowButton profile={profile}/>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n});","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n    const {username} = useParams<{username: string}>();\r\n    const {profileStore} = useStore();\r\n    const {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadProfile(username);\r\n        return () => {\r\n            setActiveTab(0);\r\n        }\r\n    }, [loadProfile, username, setActiveTab])\r\n\r\n    if (loadingProfile)\r\n        return <LoadingComponent content=\"Loading profile...\" />\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile &&\r\n                    <>\r\n                        <ProfileHeader profile={profile} />\r\n                        <ProfileContent profile={profile} />\r\n                    </>\r\n                }\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n});","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n    const {userStore: {isLoggedIn}} = useStore();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\r\n        />\r\n    )\r\n}","import React, { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded) {\n    return <LoadingComponent content='Loading app...' />\n  }\n\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{marginTop: '7em'}}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n                <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n                <PrivateRoute path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css'\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  // StrictMode does not allow deprecated methods.\n  // <React.StrictMode>\n  // </React.StrictMode>,\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}